using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp5SerializeJSON
{
    [DataContract]
    class Employee
    {
        [DataMember]
        public string Name { get; set; }

        [DataMember]
        public string Description { get; set; }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
            Employee empObj = new Employee()
            {
                Name = "Jay",
                Description = "IT"
            };

            DataContractJsonSerializer js = new DataContractJsonSerializer(typeof(Employee));
            MemoryStream msObj = new MemoryStream();
            js.WriteObject(msObj, empObj);
            msObj.Position = 0;
            StreamReader sr = new StreamReader(msObj);

            // "{\"Description\":\"IT\",\"Name\":\"Jay\"}"
            string json = sr.ReadToEnd();
            Console.WriteLine("Stage 1: Serialization Starts..");
            Console.WriteLine(json);
            Console.WriteLine("Stage 1: Serialization Ends..");
            sr.Close();
            msObj.Close();




            json = "{\"Description\":\"IT\",\"Name\":\"Jay\"}";

            using (var ms = new MemoryStream(Encoding.Unicode.GetBytes(json)))
            {
                // Deserialization from JSON
                DataContractJsonSerializer deserializer = new DataContractJsonSerializer(typeof(Employee));
                Employee empObj2 = (Employee)deserializer.ReadObject(ms);
                Console.WriteLine("Stage 2: DeSerialization Starts..");
                Console.Write("Name: " + empObj2.Name); // Name: Jay
                Console.WriteLine("Description: " + empObj2.Description); // Description: IT
                Console.WriteLine("Stage 2: DeSerialization ends..");
            }
            Console.ReadKey();

        }
    }
}








Start an ASP .Net Core (MVC) project : Day24JSON_MVC_API
Add models:
Student
StudentContext
Add APIController
StudentsController
Code




using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Day24_JSON__MVC_API.Models
{
    public class Student
    {
        public int StudentId { get; set; }
        public string Name { get; set; }
        public string SurName { get; set; }

    }
}




using System.Collections.Generic;
using System.Linq;

namespace Day24_JSON__MVC_API.Models
{
    public class StudentContext
    {
        public List<Student> student = new List<Student>        {
            new Student { StudentId=101,Name="Abc",SurName="xyz"},
            new Student { StudentId = 102, Name = "Abc2", SurName = "xyz2" },
            new Student { StudentId = 103, Name = "Abc3", SurName = "xyz3" },
            new Student { StudentId = 104, Name = "Abc4", SurName = "xyz4" }
        };
        public List<Student> GetAllStudent()
        {
            return student;
        }
        public Student GetStudent(int id)
        {
            return student.FirstOrDefault(x => x.StudentId == id);
        }
        public StudentContext()
        {
            student.Add(new Student { StudentId = 105, Name = "Abc5", SurName = "xyz5" });
            student.Add(new Student { StudentId = 106, Name = "Abc6", SurName = "xyz6" });
            student.Add(new Student { StudentId = 107, Name = "Abc7", SurName = "xyz7" });
            student.Add(new Student { StudentId = 108, Name = "Abc8", SurName = "xyz8" });
        }
    }
}





using Day24_JSON__MVC_API.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;

namespace Day24_JSON__MVC_API.Controllers
{
    //[Route("api/[controller]")]
    [ApiController]
    [Produces("application/json")]
    [Route("api/Students")]
    public class StudentsController : ControllerBase
    {
        private StudentContext students = new StudentContext();
        [Microsoft.AspNetCore.Mvc.HttpGet]
        public ActionResult<IEnumerable<Student>> GetAllStudents()
        {
            return students.GetAllStudent();
        }
        [HttpGet("{id:int}")]
        //[Route("api/Students/{id}")]
        public ActionResult<Student> GetStudentById(int id)
        {
            return students.GetStudent(id);
        }
    }
}




Add the consumer Controller:
ConsumerStdAPIController.cs
Add itâ€™s view as Razor view with Template: List, Model: Student:
Index.cshtml

Add NuGet Package :
Newtonsoft.Json from Microsoft




using Day24_JSON__MVC_API.Models;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Net.Http.Headers;
using System.Net.Http;
using System.Threading.Tasks;
using System;

namespace Day24_JSON__MVC_API.Controllers
{
    public class ConsumerStdAPIController : Controller
    {
        string Baseurl = "https://localhost:7200/";
        public async Task<IActionResult> Index()
        {
            List<Student> StdInfo = new List<Student>();
            using (var client = new HttpClient())
            {
                //Passing service base url
                client.BaseAddress = new Uri(Baseurl);
                client.DefaultRequestHeaders.Clear();
                //Define request data format
                client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                //Sending request to find web api REST service resource GetAllStudents using HttpClient
                HttpResponseMessage Res = await client.GetAsync("api/Students");
                //Checking the response is successful or not which is sent using HttpClient
                if (Res.IsSuccessStatusCode)
                {
                    //Storing the response details recieved from web api
                    var StdResponse = Res.Content.ReadAsStringAsync().Result;
                    //Deserializing the response recieved from web api and storing into the Student list
                    StdInfo = JsonConvert.DeserializeObject<List<Student>>(StdResponse);
                }
                return View(StdInfo);
            }
        }
    }
}


















