ASP.NET provides a wide range of built-in HTML helpers that can be used as per the user’s choice as there are multiple overrides available for them. 
There are three types of built-in HTML helpers offered by ASP.NET.
1. Standard HTML Helper 
The HTML helpers that are mainly used to render HTML elements like text boxes, checkboxes, Radio Buttons, and Dropdown lists, etc. are called Standard HTML helpers. 
2. Strongly-Typed HTML Helper 
The Strongly-Typed HTML helper takes a lambda as a parameter that tells the helper, which element of the model to be utilized in the typed view. The Strongly typed views are used for rendering specific sorts of model objects, rather than using the overall View-Data structure. The functionality of all of these are the same as above but they are used with modal classes. Now, as we know we need a model class to use strongly typed HTML
3. Templated HTML Helper 
The templated HTML Helper is used for data display and input. It generates HTML automatically as per model property and it can generate HTML for a complete model with a single tag. These are divided into two categories 
Display Template
Editor Template



List of Standard HTML Helpers :
@Html.ActionLink() - Used to create link on html page
@Html.TextBox() - Used to create text box
@Html.CheckBox() - Used to create check box
@Html.RadioButton() - Used to create Radio Button
@Html.BeginFrom() - Used to start a form
@Html.EndFrom() - Used to end a form
@Html.DropDownList() - Used to create drop down list
@Html.Hidden() - Used to create hidden fields
@Html.label() - Used for creating HTML label is on the browser
@Html.TextArea() - The TextArea Method renders textarea element on browser
@Html.Password() - This method is responsible for creating password input field on browser
@Html.ListBox() - The ListBox helper method creates html ListBox with scrollbar on browser





List of strongly-Typed HTML Helper:
@Html.HiddenFor()
@Html.LabelFor()
@Html.TextBoxFor()
@Html.RadioButtonFor()
@Html.DropDownListFor()
@Html.CheckBoxFor()
@Html.TextAreaFor()
@Html.PasswordFor()
@Html.ListBoxFor()




List of Templated HTML Helpers :
Display
@Html.Display()
@Html.DisplayFor()
@Html.DisplayName()
@Html.DisplayNameFor()
@Html.DisplayText()
@Html.DisplayTextFor()
@Html.DisplayModelFor()

Edit / Input
@Html.Editor()
@Html.EditorFor()
@Html.EditorForModel()



Example:

EmployeeController:


using Microsoft.AspNetCore.Mvc;

namespace Day23MVCHTMLHelpers.Controllers
{
    public class EmployeeController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }
        public IActionResult HTMLHelper1()
        {
            return View();
        }
    }
}




/Employee/Index.cshtml:

<h2>
    <a href="/Employee/HTMLHelper1">
        Standard HTML Helper Example
    </a>
</h2>




/Employee/HTMLHelper1.cshtml:

@{  Layout = null;  }
<div>
        <h3>Label example</h3>   
        @Html.Label("firstName", "First Name")
        <h3>Text Box Example</h3>  @Html.TextBox("txtFirstName", "", new { @class = "form-control", placeholder = "First Name" })
        <h3>Text Area Example</h3> @Html.TextArea("address", new { @class = "form-control", rows = "5" })
        <h3>password Example</h3>  @Html.Password("password", "", new { @class = "form-control" })
        <h3>Radio Button Example</h3> 
        @Html.RadioButton("MaritalStatus", "Married", new { id = "IsMarried" }) Married
        @Html.RadioButton("MaritalStatus", "UnMarried", new { id = "IsNotMarried" }) UnMarried
        <h3>Check Box Example</h3> @Html.CheckBox("htmlSkill") HTML 5
        <h3>List Box Example</h3>
        @Html.ListBox("Skills", new List<SelectListItem> {
            new SelectListItem { Text="ASP.NET",Value="1"},
            new SelectListItem { Text="MVC",Value="2"},
            new SelectListItem { Text="SQL Server",Value="3"},
            new SelectListItem { Text="Angular",Value="4"},
            new SelectListItem { Text="Web API",Value="5"}
        }, new { @class = "form-control" })
        <h3>drop down List Example</h3>
        @Html.DropDownList("Gender", new List<SelectListItem> {
                    new SelectListItem {Text="Select Gender",Value="-1" },
                    new SelectListItem {Text="Male",Value="1" },
                    new SelectListItem {Text="Female", Value="2" }
                    }, new { @class = "custom-select" })
    </div>



Example2:
Model: EmployeeClass.cs:

namespace Day23MVCHTMLHelpers.Models
{
    public class EmployeeClass
    {
        public int EmpId { get; set; }
        public string Name { get; set; }
        public string Gender { get; set; }
        public city city { get; set; }
        public skills skills { get; set; }
        public string Address { get; set; }
        public string Password { get; set; }
        public bool AgreeTerm { get; set; }
    }
}
public enum city
{
    Dehli, Mumbai, Kolkata, Chennai, Bangalore
}
public enum skills
{
    HTML5, CSS3, Bootstrap, JavaScript, JQuery, Angular, MVC, WebAPI
}




EmployeeController.cs: HTMLHelper in get and post planned Action

using Day23MVCHTMLHelpers.Models;
using Microsoft.AspNetCore.Mvc;

namespace Day23MVCHTMLHelpers.Controllers
{
    public class EmployeeController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }
        public IActionResult HTMLHelper1()
        {
            return View();
        }
        public ActionResult HTMLHelper2()
        {
            return View();
        }
        [HttpPost]
        public IActionResult HTMLHelper2(EmployeeClass emp)
        {
            return View();
        }
    }
}





HTMLHelper2.csHTML:

@using Day23MVCHTMLHelpers.Models
@model EmployeeClass
@{
    ViewBag.Title = "IndexHTMLHelper2";
}
<div>
    <h3>Label Example</h3>
    @Html.LabelFor(model => model.Name, new { @class = "label-control" })
    <h3>Text box Example</h3>  @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
    <h3>Text Box Example 2</h3>  @Html.TextAreaFor(model => model.Address, new { @class = "form-control", rows = "5" })
    <h3>Password for example</h3>  @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
    <h3>Radio Button Example</h3>
    @Html.RadioButtonFor(model => model.Gender, true, new { id = "male-true" })
    @Html.Label("male-true", "Male")
    @Html.RadioButtonFor(model => model.Gender, false, new { id = "female-true" })
    @Html.Label("female-true", "Female")
    <h3>Check Box Example</h3>   @Html.CheckBoxFor(model => model.AgreeTerm)
    <h3>List Box Example</h3>
    @Html.ListBoxFor(model => model.skills, new SelectList(Enum.GetValues(typeof(skills))), new { @class = "form-control" })
    <h3>Drop Down List Example</h3>
    @Html.DropDownListFor(model => model.city, new SelectList(Enum.GetValues(typeof(city))), "Select City", new { @class = "form-control" })
</div>






